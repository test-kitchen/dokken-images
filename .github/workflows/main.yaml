name: build-and-push

"on":
  pull_request:
  push:
    branches: [main]
  schedule: [cron: "0 0 * * *"]

jobs:
  buildx-arm64-amd64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os-with-arm64:
          - "almalinux-8"
          - "almalinux-9"
          - "amazonlinux-2"
          - "amazonlinux-2023"
          - "centos-7"
          - "centos-8"
          - "centos-stream-8"
          - "centos-stream-9"
          - "debian-10"
          - "debian-11"
          - "debian-12"
          - "eurolinux-7"
          - "eurolinux-8"
          - "eurolinux-9"
          - "fedora-37"
          - "fedora-38"
          - "fedora-39"
          - "fedora-latest"
          - "opensuse-leap-15"
          - "opensuse-leap-15.3"
          - "opensuse-leap-15.4"
          - "opensuse-leap-15.5"
          - "rockylinux-8"
          - "rockylinux-9"
          - "oraclelinux-7"
          - "oraclelinux-8"
          - "oraclelinux-9"
          - "ubuntu-16.04"
          - "ubuntu-18.04"
          - "ubuntu-20.04"
          - "ubuntu-22.04"
          - "ubuntu-22.10"
          - "ubuntu-23.04"
          - "ubuntu-23.10"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/test-kitchen/dokken/${{ matrix.os-with-arm64 }}
            dokken/${{ matrix.os-with-arm64 }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (amd64, arm64)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          file: ./${{ matrix.os-with-arm64 }}/Dockerfile
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

  buildx-amd64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/test-kitchen/dokken/${{ matrix.os-without-arm64 }}
            dokken/${{ matrix.os-without-arm64 }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (amd64)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64
          file: ./${{ matrix.os-without-arm64 }}/Dockerfile
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ steps.git-sha.outputs.short }}
